from django.shortcuts import render, redirect
from django.contrib.auth.decorators import login_required
from django.contrib import messages
from .forms import OrderForm
from cart.models import Cart, CartItem
from .models import Order, OrderItem
import requests
from config import BOT_TOKEN, TG_ID


def send_order_to_telegram(order):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –æ –∑–∞–∫–∞–∑–µ –≤ Telegram –∞–¥–º–∏–Ω—É."""
    token = BOT_TOKEN
    chat_id = TG_ID
    message = (f"üì¶ –ù–æ–≤—ã–π –∑–∞–∫–∞–∑!\n\n"
               f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {order.user.username}\n"
               f"üìç –ê–¥—Ä–µ—Å –¥–æ—Å—Ç–∞–≤–∫–∏: {order.delivery_address}\n"
               f"üìÑ –û—Ç–∫—Ä—ã—Ç–∫–∞: {'–î–∞' if order.add_card else '–ù–µ—Ç'}\n"
               f"üìù –¢–µ–∫—Å—Ç –æ—Ç–∫—Ä—ã—Ç–∫–∏: {order.card_text or '–ë–µ–∑ –æ—Ç–∫—Ä—ã—Ç–∫–∏'}\n"
               f"üïí –î–∞—Ç–∞ –∑–∞–∫–∞–∑–∞: {order.created_at.strftime('%Y-%m-%d %H:%M:%S')}\n"
               f"üõí –°–æ—Å—Ç–∞–≤ –∑–∞–∫–∞–∑–∞:\n")
    for item in order.items.all():
        message += f"   - {item.product.name} x {item.quantity} (–¶–µ–Ω–∞: {item.price} —Ä—É–±.)\n"

    url = f'https://api.telegram.org/bot{token}/sendMessage'
    data = {'chat_id': chat_id, 'text': message}
    response = requests.post(url, data=data)

    if response.status_code != 200:
        print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–∫–∞–∑–∞ –≤ Telegram: {response.text}")


@login_required
def create_order(request):
    """–°–æ–∑–¥–∞–Ω–∏–µ –∑–∞–∫–∞–∑–∞ —Å —Ç–æ–≤–∞—Ä–∞–º–∏ –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã."""
    cart = Cart.objects.filter(user=request.user).first()

    if not cart or not cart.items.exists():
        messages.error(request, "–í–∞—à–∞ –∫–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞.")
        return redirect('cart:cart_view')

    if request.method == 'POST':
        form = OrderForm(request.POST)
        if form.is_valid():
            try:
                # –°–æ–∑–¥–∞–µ–º –æ–±—ä–µ–∫—Ç –∑–∞–∫–∞–∑–∞
                order = form.save(commit=False)
                order.user = request.user
                order.save()

                # –ü–µ—Ä–µ–Ω–æ—Å–∏–º —Ç–æ–≤–∞—Ä—ã –∏–∑ –∫–æ—Ä–∑–∏–Ω—ã –≤ –∑–∞–∫–∞–∑
                for cart_item in cart.items.all():
                    OrderItem.objects.create(
                        order=order,
                        product=cart_item.product,
                        quantity=cart_item.quantity,
                        price=cart_item.product.price
                    )

                # –û—á–∏—â–∞–µ–º –∫–æ—Ä–∑–∏–Ω—É
                cart.items.all().delete()

                # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–∫–∞–∑ –∞–¥–º–∏–Ω—É —á–µ—Ä–µ–∑ Telegram
                try:
                    send_order_to_telegram(order)
                except Exception as e:
                    print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ Telegram: {e}")

                messages.success(request, '–í–∞—à –∑–∞–∫–∞–∑ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω! –ú—ã —Å–∫–æ—Ä–æ —Å –≤–∞–º–∏ —Å–≤—è–∂–µ–º—Å—è.')
                return redirect('home')

            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∑–∞–∫–∞–∑–∞: {e}")
                messages.error(request, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏–∏ –∑–∞–∫–∞–∑–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
                return redirect('cart:cart_view')
        else:
            messages.error(request, "–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø—Ä–∞–≤—å—Ç–µ –æ—à–∏–±–∫–∏ –≤ —Ñ–æ—Ä–º–µ.")
    else:
        form = OrderForm()

    return render(request, 'orders/create_order.html', {'form': form})
